package service;

import java.net.PasswordAuthentication;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Scanner;

import dao.UserDao;
import dao.UserDaoImpl;
import data.Session;
import vo.UserVO;

public class UserServiceImpl implements UserService {

	private static UserServiceImpl instance;
	
	private UserServiceImpl(){}
	
	public static UserServiceImpl getInstance(){
		if(instance == null){
			instance = new UserServiceImpl();
		}
		return instance;
	}
	
	UserDao userDao = UserDaoImpl.getInstance();
	
	@Override
	public void join() {
		// 회원가입
		// 사용자 정보 입력
		Scanner s = new Scanner(System.in);
		UserVO user = new UserVO(); //UserVo객체를 user로 저장
		
		
		////아이디 입력받기
		System.out.print("아이디 : ");
		String id = s.nextLine();
		
		// 아이디 중복 검사(아이디가 일치하는 회원 검색)
		UserVO userCheck = userDao.selectUser("ID", id);
		
		while(!user.setId(id) || userCheck != null){
			userCheck = userDao.selectUser("ID", id);
			if(!user.setId(id)){
				System.out.print("형식이 맞지 않습니다. 다시 입력해주세요. \r아이디 : ");
			} else if (userCheck != null){
				System.out.print("이미 사용중인 아이디입니다. \r아이디 : ");
			}
			id = s.nextLine();
		}
		
		////비밀번호 입력받기
		System.out.print("비밀번호 : ");
		String password = s.nextLine();
		while(!user.setPassword(password)){
			System.out.print("형식이 맞지 않습니다. 다시 입력해주세요. \r비밀번호 : ");	
			password = s.nextLine();
		}
		user.setPassword(password);//UserVo 객체에 password변수 저장
		
		////이름 입력받기
		System.out.print("이름 : ");
		String name = s.nextLine();
		while(!user.setName(name)){
			System.out.print("형식이 맞지 않습니다. 다시 입력해주세요. \r이름 : ");
			name = s.nextLine();
		}
		user.setName(name);

		// 사용자 정보 저장
		userDao.insertUser(user);
		System.out.println(user.getName() + "님의 가입을 환영합니다.");
		
	}

	@Override
	public void login() {
		// 로그인
		// 아이디, 비밀번호 입력
		Scanner s = new Scanner(System.in);
		
		System.out.print("아이디 : ");  
		String id = s.nextLine();
		System.out.print("비밀번호 : ");
		String password = s.nextLine();
		
		// 아이디와 비밀번호가 일치하는 회원 검색
		HashMap<String, String> param = new HashMap<String, String>();
		param.put("ID", id);
		param.put("PASSWORD", password);
		
		UserVO user = userDao.selectUser(param);
		
		// 있으면 로그인
		// 없으면 로그인 실패
		if(user == null){
			System.out.println("아이디 혹은 비밀번호를 잘못 입력하셨습니다.");
		}else{
			Session.loginUser = user;
			System.out.println("로그인 성공");
			System.out.println(user.getName() + "님 환영합니다.");
		}
	}

	@Override
	public void userList() {
		// 회원 전체 목록 출력
		// 회원 전체 검색
		ArrayList<UserVO> userList = userDao.selectUserList();
		
		// 출력
		System.out.println("------------------------------");
		System.out.println("번호\t아이디\t이름");
		System.out.println("------------------------------");
		for(int i = 0; i < userList.size(); i++){
			UserVO user = userList.get(i);
			System.out.println(i + 1 + "\t" + user.getId() + "\t" + user.getName());
		}
		System.out.println("------------------------------");
		 
	}

}
