package service;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.Scanner;

import controller.Controller;
import dao.UserDao;
import dao.UserDaoImpl;
import data.Session;
import vo.MovieVO;
import vo.NoticeVO;
import vo.UserVO;

public class UserServiceImpl implements UserService {

	private static UserServiceImpl instance;
	
	
	
	private UserServiceImpl(){}
	
	public static UserServiceImpl getInstance(){
		if(instance == null){
			instance = new UserServiceImpl();
		}
		return instance;
	}
	
	UserDao userDao = UserDaoImpl.getInstance();
	
	private void showBar(String str) {
		System.out.println();
		System.out.println("┌─────────────────────────────────────┐");
		System.out.println("\t\t" + str);
		System.out.println("└─────────────────────────────────────┘");
	}
	
	@Override
	public void join() {
		// 회원가입
		// 사용자 정보 입력
		Scanner s = new Scanner(System.in);
		
		System.out.print("아이디 : ");
		String id = s.nextLine();
		System.out.print("비밀번호 : ");
		String password = s.nextLine();
		System.out.print("이름 : ");
		String name = s.nextLine();
		
		// 아이디 중복 검사(아이디가 일치하는 회원 검색)
		UserVO user = new UserVO();
		user.setId(id);
		user.setPassword(password);
		user.setName(name);
		
		UserVO userCheck = userDao.selectUser("ID", user.getId());
		
		// 사용자 정보 저장
		if(userCheck == null){
			userDao.insertUser(user);
			System.out.println(user.getName() + "님의 가입을 환영합니다.");
			new Controller().start();
		}else{
			System.out.println("이미 존재하는 아이디입니다.");
			join();
		}
	}

	@Override
	public void login() {
		// 로그인
		// 아이디, 비밀번호 입력
		Scanner s = new Scanner(System.in);
		showBar("로그인");
		System.out.print("아이디 : ");
		String id = s.nextLine();
		System.out.print("비밀번호 : ");
		String password = s.nextLine();
		
		// 아이디와 비밀번호가 일치하는 회원 검색
		HashMap<String, String> param = new HashMap<String, String>();
		param.put("ID", id);
		param.put("PASSWORD", password);
		
		UserVO user = userDao.selectUser(param);
		
		// 있으면 로그인
		// 없으면 로그인 실패
		if(user == null){
			System.out.println("아이디 혹은 비밀번호를 잘못 입력하셨습니다.");
			login();
		}else{
			Session.loginUser = user;
			System.out.println("로그인 성공");
			
			if(user.isManager()){
				System.out.println("관리자님 환영합니다.");
				managerLogin();
			}else{
				System.out.println(user.getName() + "님 환영합니다.");
				userLogin();
			}
		}
	}
	
	@Override
	public void logout() {
		//로그아웃
		S
	}
	
	@Override
	public void managerLogin(){
		Scanner s = new Scanner(System.in);
		
		int menu;
/*		1.영화등록 및 삭제
		2.회원정보조회
		3.공지사항등록*/
		showBar("관리자 페이지");
		System.out.println("----------------- 메뉴 ------------------");
		System.out.println("1. 회원정보조회");
		System.out.println("2. 영화 관리");
		System.out.println("3. 공지사항 관리");
		System.out.println("0. 프로그램 종료");
		System.out.println("---------------------------------------");
		System.out.println("메뉴에 해당하는 번호 입력 > ");
		
		menu = Integer.parseInt(s.nextLine());  
		
		switch(menu){
		case 1:	// 회원정보조회
			userList();
			break;
			
		case 2:	// 영화 관리
			manageMovie();
			break;
			
		case 3: // 공지사항 관리
			manageNotice();
			break;
			
		case 0: // 프로그램 종료
			System.out.println("프로그램 종료");
			break;

		}
	}
	
	@Override
	public void userLogin() {
		// 사용자 로그인
		Scanner s = new Scanner(System.in);
		
		int menu;
/*		1.영화등록 및 삭제
		2.회원정보조회
		3.공지사항등록*/
		showBar("사용자 페이지");
		System.out.println("----------------- 메뉴 ------------------");
		System.out.println("1. 영화예매");
		System.out.println("2. 예매내역");
		System.out.println("3. 평점 및 리뷰작성");
		System.out.println("4. 마이페이지");
		System.out.println("5. 공지사항");
		System.out.println("---------------------------------------");
		System.out.println("메뉴에 해당하는 번호 입력 > ");
		
		menu = Integer.parseInt(s.nextLine());  
		
		switch(menu){
		case 1:	// 영화예매
			reserveMovie();
			break;
			
		case 2:	// 예매내역
			reserveList();
			break;
			
		case 3: // 평점 및 리뷰작성
			review();
			break;
			
		case 4: // 마이페이지
			myPage();
			break;
			
		case 5: // 공지사항
			userNotice();
			break;

		}	
	}

	@Override
	public void userList() {
		// 회원 전체 목록 출력
		// 회원 전체 검색
		ArrayList<UserVO> userList = userDao.selectUserList();
		showBar("회원목록");
		// 출력
		System.out.println("---------------------------------------");
		System.out.println("번호\t아이디\t이름");
		System.out.println("---------------------------------------");
		for(int i = 0; i < userList.size(); i++){
			UserVO user = userList.get(i);
			System.out.println(i + 1 + "\t" + user.getId() + "\t" + user.getName());
		}
		System.out.println("---------------------------------------");
		
		managerLogin();
	}

	@Override
	public void manageMovie() {
		// 영화 관리
		int menu;
		Scanner s = new Scanner(System.in);
		
		showBar("영화 관리");
		System.out.println("----------------- 메뉴 ------------------");
		System.out.println("1. 영화 조회");
		System.out.println("2. 영화 등록");
		System.out.println("3. 영화 삭제");
		System.out.println("4. 뒤로 가기");
		System.out.println("---------------------------------------");
		System.out.println("메뉴에 해당하는 번호 입력 > ");
		menu = Integer.parseInt(s.nextLine());
		
		switch(menu){
		case 1:	// 영화 조회
			selectMovie();
			break;
			
		case 2:	// 영화 등록
			insertMovie();
			break;
			
		case 3:	// 영화 삭제
			deleteMovie();
			break;
			
		case 4: // 뒤로 가기
			managerLogin();
			break;
		}
		
	}
	
	@Override
	public void insertMovie() {
		// 영화 등록
		Scanner s = new Scanner(System.in);
		showBar("영화 등록");
		System.out.print("영화이름 입력 : ");
		String movieName = s.nextLine();
		System.out.print("러닝타임 입력 : ");
		String runTime = s.nextLine();
		System.out.print("감독 입력 : ");
		String director = s.nextLine();
		System.out.print("평점 입력 : ");
		String score = s.nextLine();
		System.out.print("출연진 입력 : ");
		String actors = s.nextLine();
		System.out.print("연령제한 입력 : ");
		String ageLimit = s.nextLine();
		System.out.print("줄거리 입력 : ");
		String story = s.nextLine();
		
		//데이터베이스에 저장하는 코드 들어갈 자리
		MovieVO movie = new MovieVO();
		movie.setMovieName(movieName);
		movie.setRunTime(Integer.parseInt(runTime));
		movie.setDirector(director);
		movie.setScore(Integer.parseInt(score));
		movie.setActors(actors);
		movie.setAgeLimit(Integer.parseInt(ageLimit));
		movie.setStory(story);
		userDao.insertMovie(movie);
		
		
		System.out.println("----------------- 메뉴 ------------------");
		System.out.println("영화이름 : " + movieName); 
		System.out.println("러닝타임 : " + runTime); 
		System.out.println("감독 : " + director); 
		System.out.println("평점 : " + score); 
		System.out.println("출연진 : " + actors); 
		System.out.println("연령제한 : " + ageLimit); 
		System.out.println("줄거리 : " + story);
		System.out.println("---------------------------------------");
		System.out.println("저장되었습니다.");
		
		managerLogin();
	}



	@Override
	public void deleteMovie() {
		// 영화 삭제
		ArrayList<MovieVO> movieList = userDao.selectMovieList();
		if(movieList.isEmpty()){
			System.out.println("삭제할 영화가 없습니다.");
			managerLogin();
		} else {
			Scanner s = new Scanner(System.in);
			printMovie();
			showBar("영화 삭제");
			
			System.out.print("삭제할 영화 번호를 입력하세요: "); 
			int number = Integer.parseInt(s.nextLine());
			
			System.out.println(number + "번을 삭제하시겠습니까? (Y / N)");
			String delete = s.nextLine();
			
			if(delete.equals("Y")||delete.equals("y")){
				System.out.println("삭제되었습니다.");
				movieList.remove(number - 1);
				managerLogin();
			}else if(delete.equals("N")||delete.equals("n")){
				managerLogin();
			}else{
				System.out.println("예 / 아니오만 입력해주세요.");
				deleteMovie();
			}
		}
	}
	
	@Override
	public void printMovie() {
		Scanner s = new Scanner(System.in);
		// 영화 목록
		// 영화 목록 예시 뿌려줌. 원래 데이터베이스로 가져와야함
		ArrayList<MovieVO> movieList = userDao.selectMovieList();
		showBar("영화 목록");
		System.out.println("---------------------------------------");
		System.out.println("No" + "\t" + "제목"); 
		System.out.println("---------------------------------------");
		for(int i = 0; i < movieList.size(); i++){
			MovieVO movie = movieList.get(i);
			System.out.println(i + 1 + "\t" + movie.getMovieName());
		}
		System.out.println("---------------------------------------");
	}
	
	@Override
	public void selectMovie() {
		printMovie();
		manageMovie();
	}
	
	
	@Override
	public void userNotice() {
		//사용자 공지사항
		selectNotice();
		
		Scanner s = new Scanner(System.in);
		System.out.print("게시글 번호를 입력해주세요 >");
		
		int noticeNo = Integer.parseInt(s.nextLine());
		
		ArrayList<NoticeVO> noticeList = userDao.selectNoticeList();
		System.out.println("---------------------------------------");
		System.out.println("No" + "\t" + "제목"); 
		System.out.println("---------------------------------------");
		
			NoticeVO notice = noticeList.get(noticeNo-1);
			System.out.println(noticeNo + "\t" + notice.getContents());
		
		System.out.println("---------------------------------------");
		System.out.println();
		System.out.println("(뒤로가기 : 9) > ");
		int back = Integer.parseInt(s.nextLine());
		if(back == 9){
			userLogin();
		}

		
		
		
		
		/*switch(menu){

		case 1:	// 1번 공지사항
			nv.getNoticeCode()
			break;
			
		case 2:	// 2번공지사항
			
			break;
			
		case 3: // 뒤로 가기
			userLogin();
			break;
		}*/
		
		
		
	}
	
	
	@Override
	public void manageNotice() {
		// 공지사항 관리
		int menu;
		Scanner s = new Scanner(System.in);
		
		
		
		selectNotice(); //공지사항 목록 출력
		
		System.out.println("----------------- 메뉴 ------------------");
		
		System.out.println("1. 공지사항 등록");
		System.out.println("2. 공지사항 삭제");
		System.out.println("3. 뒤로 가기");
		System.out.println("---------------------------------------");
		System.out.println("메뉴에 해당하는 번호 입력 > ");
		menu = Integer.parseInt(s.nextLine());
		
		switch(menu){
		
		
			
		case 1:	// 공지사항 등록
			insertNotice();
			break;
			
		case 2:	// 공지사항 삭제
			deleteNotice();
			break;
			
		case 3: // 뒤로 가기
			managerLogin();
			break;
		}
	}

	@Override
	public void insertNotice() {
		// 공지사항 등록
		Scanner s = new Scanner(System.in);
		showBar("공지사항 등록");
		System.out.print("제목 입력 : ");
		String title = s.nextLine();
		System.out.print("내용 입력 : ");
		String contents = s.nextLine();
		System.out.println("저장되었습니다.");

		
		NoticeVO nv = new NoticeVO();
		Session ses = new Session();
		nv.setTitle(title);
		nv.setContents(contents);
		nv.setUserID(ses.loginUser.getId());
		
		userDao.insertNotice(nv);
		
		/////////////////공지사항 제목에서 연결


		
		managerLogin();
	}

	@Override
	public void deleteNotice() {
	
		// 공지사항 삭제
		Scanner s = new Scanner(System.in);
		showBar("영화 삭제");
		System.out.print("삭제할 영화 번호를 입력하세요: "); 
		String number = s.nextLine();
		System.out.println(number + "번을 삭제하시겠습니까? (예/아니오)");
		String delete = s.nextLine();
		if(delete.equals("예")){
			
			
			System.out.println("삭제되었습니다.");
		}else if(delete.equals("아니오")){
			managerLogin();
		}else{
			System.out.println("예 / 아니오만 입력해주세요.");
			deleteMovie();
		}
		managerLogin();
	}

	@Override
	public void selectNotice() {
		// 공지사항 목록
		Scanner s = new Scanner(System.in);
		// 공지사항으로 변경해준다.
		
		ArrayList<NoticeVO> noticeList = userDao.selectNoticeList();
		//showBar("공지사항 목록");
		System.out.println();
		System.out.println("---------------------------------------");
		System.out.println("No" + "\t" + "제목"); 
		System.out.println("---------------------------------------");
		for(int i = 0; i < noticeList.size(); i++){
			NoticeVO notice = noticeList.get(i);
			System.out.println(i + 1 + "\t" + notice.getTitle());
		}
		System.out.println("---------------------------------------");
		System.out.println();
		System.out.println();
		System.out.println();
		
		
	}
///////////////////////////////////////////////////////////////////
	@Override
	public void reserveMovie() {
		// 
		printMovie();
		
		Scanner s = new Scanner(System.in);
		
		System.out.print("선택할 영화 번호를 입력하세요 (9:뒤로가기) > ");
		String choiceNumber = s.nextLine();
		choiceMovie();
		//로직 필요함

	}

	@Override
	public void reserveList() {
		// 예매 목록
		
	}

	@Override
	public void review() {
		// 평점및리뷰
		
	}

	@Override
	public void myPage() {
		// 마이페이지
		
	}

	@Override
	public void choiceMovie() {
		Scanner s = new Scanner(System.in);
		
		System.out.println("000 영화가 선택되었습니다.");
		
		// 1. 날짜 선택 , 디자인은 당신의 기호에 맞게 수정하셔도 됩니다.
		System.out.println("---------------------------------------");
		System.out.println("\t월\t\t일");
		System.out.println("---------------------------------------");
		System.out.println("\t12\t\t20");
		System.out.println("\t12\t\t21");
		System.out.println("\t12\t\t22");
		System.out.println("\t12\t\t23");
		System.out.println("---------------------------------------");
		System.out.println();
		
		System.out.print("날짜를 선택해주세요 (2000-00-00) > ");
		String date = s.nextLine();
		
		// 로직 2000-00-00
		System.out.println("선택된 날짜는 " + date +"입니다."); //확인용
		
		// 2. 상영시간 선택
		System.out.println("---------------------------------------");
		System.out.println("No" + "\t관" + "\t상영시간" + "\t잔여좌석/전체좌석"); 
		System.out.println("---------------------------------------");
		System.out.println(" 1" + "\t1관" + "\t09:40" + "\t01/45");
		System.out.println(" 2" + "\t1관" + "\t10:20" + "\t10/45");
		System.out.println(" 3" + "\t2관" + "\t12:40" + "\t14/45");
		System.out.println(" 4" + "\t2관" + "\t14:10" + "\t20/45");
		System.out.println(" 5" + "\t5관" + "\t15:40" + "\t22/45");
		System.out.println("---------------------------------------");
		System.out.println();
		// 로직
		System.out.print("원하는 시간대를 선택해주세요 > "); //No 입력
		String time = s.nextLine();
		System.out.println("예매내역 : " + "5" + "관 - " + "15:40");
	
		// 3. 인원 선택
		System.out.print("인원을 입력해주세요 > "); 
		String member = s.nextLine();
		// 로직
		System.out.println("예약인원 : " + "2" + "명");
		
		// 4. 좌석 선택 □ ■
		// 2 5 2
//		int[] reservedSeat = {10, 15, 16};
//		int[][] seat = new int[5][9];
//		for() {
//			for() {
//				
//			}
//		}
		
		System.out.print("H ");
		System.out.print("□");System.out.print("□");
		System.out.print("■");System.out.print("■");System.out.print("■");System.out.print("■");
		System.out.print("□");System.out.println("□");
		System.out.print("I ");
		System.out.print("□");System.out.print("□");
		System.out.print("■");System.out.print("■");System.out.print("■");System.out.print("■");
		System.out.print("□");System.out.println("□");
		System.out.print("J ");
		System.out.print("□");System.out.print("□");
		System.out.print("■");System.out.print("■");System.out.print("■");System.out.print("■");
		System.out.print("□");System.out.println("□");
		System.out.print("K ");
		System.out.print("□");System.out.print("□");
		System.out.print("■");System.out.print("■");System.out.print("■");System.out.print("■");
		System.out.print("□");System.out.println("□");
		System.out.print("L ");
		System.out.print("□");System.out.print("□");
		System.out.print("■");System.out.print("■");System.out.print("■");System.out.print("■");
		System.out.print("□");System.out.println("□");
		System.out.println("1|2 3|4|5|6|7 8|9");
		
		System.out.print("행 알파벳을 입력해 주세요 > ");
		String row1 = s.nextLine();
		System.out.print("열 번호를 입력해 주세요 > ");
		String col1 = s.nextLine();
		
		System.out.print("행 알파벳을 입력해 주세요 > ");
		String row2 = s.nextLine();
		System.out.print("열 번호를 입력해 주세요 > ");
		String col2 = s.nextLine();
		
		// 로직
		System.out.println("예약좌석 : " + row1 + col1 + "," + row2 + col2);
		System.out.println("예매하시겠습니까? (Y/N) > ");
		String isReserved = s.nextLine();
		
		if(isReserved.equals("Y") || isReserved.equals("y")) {
			System.out.println("예매되었습니다.");
			userLogin();
		}else if(isReserved.equals("N") || isReserved.equals("n")) {
			//N이나n 입력시 (4. 좌석선택)으로 돌아가기
		}
		
	}

	

	



}
